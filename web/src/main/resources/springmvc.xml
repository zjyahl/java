<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	default-lazy-init="true">

	<!-- <context:component-scan base-package="com.demo.springweb.controller" 
		use-default-filters="false"> <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" 
		/> </context:component-scan> -->
	<mvc:default-servlet-handler />



	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="webBindingInitializer"> <bean class="com.zjy.conversion.MyWebBindingInitializer" 
		/> </property> </bean> <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> 
		<property name="interceptors"> <list> <bean id="myInterceptor" class="com.zjy.util.MyInterceptor" 
		/> </list> </property> </bean> -->


	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<list>
				<bean
					class="com.zjy.formatter.PhoneNumberFormatAnnotationFormatterFactory" />
			</list>
		</property>
		<property name="converters">
			<list>
				<bean class="com.zjy.conversion.StringToPhoneNumberConverter" />
			</list>
		</property>
	</bean>



	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<!-- <bean id="exceptionResolver" class="com.zjy.util.MySimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.SQLException">error/sqlerror</prop> 
		<prop key="java.lang.Exception">error/500</prop> </props> </property> </bean> -->
	<context:annotation-config />
	<mvc:annotation-driven validator="validator"
		conversion-service="conversionService" enable-matrix-variables="true">
		<mvc:argument-resolvers>
			<bean class="com.zjy.util.CustomArgumentResolver" />
		</mvc:argument-resolvers>
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
			<ref bean="marshallingHttpMessageConverter" />
			<ref bean="jackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/hello/**" />
			<bean class="com.zjy.filter.MyInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArithmeticException">error</prop>
			</props>
		</property>
	</bean>

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" index="0" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="jackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/xml;charset=UTF-8</value>
				<value>application/xml;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="internalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<import resource="controller.xml" />
</beans>